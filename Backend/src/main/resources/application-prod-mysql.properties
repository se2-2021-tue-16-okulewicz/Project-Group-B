# Description how to deploy to aws https://www.callicoder.com/deploy-host-spring-boot-apps-on-aws-using-elastic-beanstalk/
# Description how to connect pgAdmin to remote db https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html

# Listen on the port passed through `PORT` environment variable (Fallback to 8080)
#server.port= ${PORT:8080}
server.port= 5050

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${SERVICE_NAME}:${DATABASE_PORT}/${DATABASE_NAME}?autoReconnect=true&useSSL=false&serverTimezone=UTC&createDatabaseIfNotExist=true&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.platform=mysql
spring.datasource.initialization-mode=always
#if you want ot upload test data create data.sql. if below is uncommented then data.sql will be executed
spring.datasource.schema= classpath:/schema-${spring.datasource.platform}.sql
spring.datasource.continue-on-error= true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect
# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= none
spring.jpa.show-sql= true
spring.jpa.generate-ddl= true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true

## MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled= true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold= 2KB
# Max file size.
spring.servlet.multipart.max-file-size= 200MB
# Max Request Size
spring.servlet.multipart.max-request-size= 215MB

cors.urls=
cors.mappings=/**